{"version":3,"sources":["pages/QuoteDetails.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.jsx"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComment","data","AddCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetails","match","useRouteMatch","getSingleQuote","loadedQuote","main","path","exact","to","url"],"mappings":"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","file":"static/js/3.dd1888ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"QuoteDetails_main__ZkfPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../libs/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error} = useHttp(addComment);\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if(status === \"completed\" && !error){\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value; \n    sendRequest(\n      {\n        commentData: {text: enteredText},\n        quoteId: props.quoteId\n      }\n    );\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      { status === \"pending\" && (\n        <div className=\"centered\" >\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from '../comments/CommentsList';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../libs/api'\n \nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {sendRequest, status, data: loadedComment} = useHttp(getAllComments);\n  let comments = null; \n  const {id} = params;\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n  \n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const AddCommentHandler = useCallback( () => {\n    sendRequest(id);\n    setIsAddingComment(false);\n  }, [sendRequest, id, setIsAddingComment]);\n\n  if(status === \"pending\"){\n    comments = <div className=\"centered\" >\n      <LoadingSpinner />\n    </div>\n  }\n\n  if(status === \"completed\" && (loadedComment || loadedComment.length > 0)){\n    comments = <CommentsList comments={loadedComment}/>\n  }\n\n  if(status === \"completed\" && (!loadedComment || loadedComment.length === 0)){\n    comments = <p className=\"centered\" >No Comments were added yet!</p>\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm  quoteId={params.id} onAddComment={AddCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect} from 'react';\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\nimport classes from './QuoteDetails.module.css';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n//import { DUMMY_QUOTES } from '../utils/dummyData';\n\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../libs/api';\n\n\nconst QuoteDetails = () => {\n  const {id} = useParams();\n  const match = useRouteMatch();\n  const {sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  if(status === 'pending'){\n      return <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n  }\n\n  if(error){\n    return <div className=\"centered\">\n      {error}\n  </div>\n  }\n\n\n  if(!loadedQuote.text){\n    return <p>No Quote Found.</p>\n  }\n\n  return (\n    <main className={classes.main}>\n      <HighlightedQuote \n        text={loadedQuote.text}\n        author={loadedQuote.author}\n      />\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>Load Comments</Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`} >\n        <Comments />\n      </Route>\n    </main>\n  )\n};\n\nexport default QuoteDetails;"],"sourceRoot":""}